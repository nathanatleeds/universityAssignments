// This file is part of coursework 2 for COMP1212
// which follows the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// Written by Sam Wilson

/**
 * Memory of 64 registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then
 * the x value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM64 {
    IN x[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[3..5],s=temp1,t=temp2,u=temp3,v=temp4,w=temp5,x=temp6,y=temp7,z=temp8);
    RAM8(x=x,load=temp1,address=address[0..2],out=out1);
    RAM8(x=x,load=temp2,address=address[0..2],out=out2);
    RAM8(x=x,load=temp3,address=address[0..2],out=out3);
    RAM8(x=x,load=temp4,address=address[0..2],out=out4);
    RAM8(x=x,load=temp5,address=address[0..2],out=out5);
    RAM8(x=x,load=temp6,address=address[0..2],out=out6);
    RAM8(x=x,load=temp7,address=address[0..2],out=out7);
    RAM8(x=x,load=temp8,address=address[0..2],out=out8);
    Mux8Way16(s=out1,t=out2,u=out3,v=out4,w=out5,x=out6,y=out7,z=out8,sel=address[3..5],out=out);

}
