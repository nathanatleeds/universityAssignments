<?xml version="1.0" encoding="UTF-8"?>

<project name="Cinema Booking Desktop Interface" default="compile" basedir="."
  xmlns:fx="javafx:com.sun.javafx.tools.ant">

  <!--Windows-->
  <!--<property name="JAVA_HOME" value="\usr\lib\jvm\jdk-9.0.4"/>-->
  <!--Ubuntu-->
  <!-- <property name="JAVA_HOME" value="/usr/lib/jvm/java-8-oracle"/> -->
  <!--Dec10-->
  <property name="JAVA_HOME" value="/usr/java/jdk1.8.0_141"/>
  <property name="lib.dir" value="lib"/>
  <property name="build.dir" value="bin"/>
  <property name="src.dir" value="src"/>
  <property name="scripts.dir" value="scripts"/>
  <property name="RestClient.dir" value="RestClient"/>

  <path id="project.classpath">
    <pathelement location="${lib.dir}/guava-14.0.1.jar"/>
    <pathelement location="${lib.dir}/hamcrest-core-1.3.jar"/>
    <pathelement location="${lib.dir}/itextpdf-5.0.6.jar"/>
    <pathelement location="${lib.dir}/jackson-annotations-2.9.0.jar"/>
    <pathelement location="${lib.dir}/jackson-core-2.9.0.jar"/>
    <pathelement location="${lib.dir}/jackson-databind-2.9.0.jar"/>
    <pathelement location="${lib.dir}/junit-4.12.jar"/>
    <pathelement location="${lib.dir}/sqlite-jdbc-3.21.0.jar"/>
    <pathelement location="${lib.dir}/testfx-core-4.0.6-alpha.jar"/>
    <pathelement location="${lib.dir}/testfx-junit-4.0.6-alpha.jar"/>
    <pathelement location="${lib.dir}/core-3.3.0.jar"/>
    <pathelement location="${build.dir}"/>
  </path>

  <target name="init">
    <mkdir dir="${build.dir}"/>
  </target>

  <target name="default" depends="compile">
    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml"
      uri="javafx:com.sun.javafx.tools.ant"
      classpath="${JAVA_HOME}/lib/ant-javafx.jar"/>
  </target>

  <target name="clean" description="Remove compiled code">
    <delete dir="${build.dir}"/>
  </target>

  <target name="compile" depends="init" description="Compile source code">
    <javac srcdir="${src.dir}" destdir="${build.dir}"
      includeantruntime="false"
      fork="yes"
      executable="${JAVA_HOME}/bin/javac"
      source="1.8">
      <classpath refid="project.classpath"/>
    </javac>
    <copy todir="bin/sample/resources">
      <fileset dir="src/sample/resources"/>
    </copy>
  </target>

  <target name="main" depends="compile" description="Run Main">
    <java classname="sample.Main" fork="true" jvm="java">
      <classpath refid="project.classpath"/>
    </java>
  </target>

  <target name="test" depends="compile" description="Run unit tests">
    <junit printsummary="on" haltonfailure="no" fork="true">
      <classpath refid="project.classpath"/>
      <formatter type="brief" usefile="false"/>
      <!-- <batchtest>
          <fileset dir="src/test" includes="**/*Test.java" />
      </batchtest> -->
      <!-- Tests -->
      <test name="sample.FilmTest"/>
      <test name="sample.ScreenTest"/>
      <test name="sample.SeatTest"/>
      <test name="sample.TicketTest"/>
      <test name="sample.CustomerTest"/>
      <test name="sample.ScreeningTest"/>
      <test name="sample.GenericWrapperTest"/>
      <test name="sample.PaymentScreenControllerTest"/>
      <test name="sample.BookingScreenControllerTest"/>
      <test name="sample.LoginRobot"/>
      <test name="sample.HomeScreenRobot"/>
	    <test name="sample.ScreeningRobot"/>
      <test name="sample.TicketRobot"/>
      <test name="sample.SeatRobot"/>
      <test name="sample.PaymentRobot"/>



    </junit>
  </target>

  <target name="docs" depends="compile"
    description="Generate documentation from Javadoc comments">
    <mkdir dir="${doc.dir}"/>
    <javadoc destdir="${doc.dir}" author="true" version="true">
      <classpath refid="project.classpath"/>
      <package name="sample"/>
      <fileset dir="${src.dir}">
      </fileset>
    </javadoc>
  </target>

</project>
